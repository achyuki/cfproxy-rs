name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: linux-aarch64
            os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          if [[ "${{ matrix.target }}" = "x86_64-unknown-linux-musl" || "${{ matrix.target }}" = "aarch64-unknown-linux-musl" ]]; then
            sudo apt-get update && sudo apt-get install -y musl-tools
          fi

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Build archive
        shell: bash
        run: |
          mkdir release
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "target/${{ matrix.target }}/release/cfproxy-rs.exe" "release/cfproxy-rs_${{ matrix.target }}.exe"
          else
            cp "target/${{ matrix.target }}/release/cfproxy-rs" "release/cfproxy-rs_${{ matrix.target }}"
          fi

      - name: Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: release/*